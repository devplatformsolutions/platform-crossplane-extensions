# apiVersion: apiextensions.crossplane.io/v1
# kind: Composition
# metadata:
#   name: vpc.aws.platform.example.org
#   labels:
#     provider: aws
# spec:
#   compositeTypeRef:
#     apiVersion: aws.platform.example.org/v1alpha1
#     kind: XVPC
#   resources:
#     # VPC
#     - name: vpc
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: VPC
#         metadata:
#           labels:
#             provider: aws
#         spec:
#           forProvider:
#             region: us-east-1
#             cidrBlock: 10.0.0.0/16
#             enableDnsSupport: true
#             enableDnsHostnames: true
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.cidrBlock
#           toFieldPath: spec.forProvider.cidrBlock
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     # Internet Gateway
#     - name: internet-gateway
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: InternetGateway
#         metadata:
#           name: my-igw
#           labels:
#             provider: aws
#             gateway-type: internet
#         spec:
#           forProvider:
#             region: us-east-1
#             vpcIdSelector:
#               matchControllerRef: true
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     # NAT Gateway
#     - name: nat-gateway
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: NATGateway
#         metadata:
#           name: main-nat
#           labels:
#             provider: aws
#             gateway-type: nat
#         spec:
#           forProvider:
#             # connectivityType: private
#             region: us-east-1
#             subnetIdSelector:
#               # matchControllerRef: true
#               matchLabels:
#                 subnet-type: private
#             allocationIdSelector:
#               # matchControllerRef: true
#               matchLabels:
#                 eip-type: nat
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     - name: nat-eip
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: EIP
#         metadata:
#           name: nat-eip
#           labels:
#             provider: aws
#             eip-type: nat
#         spec:
#           forProvider:
#             region: us-east-1
#             domain: 'vpc'
#             # publicIpv4Pool: identifier
#             # vpc: false
#           managementPolicies: 
#             - "*"

#     # Public Subnets
#     - name: public-subnet-1
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: Subnet
#         metadata:
#           name: public-subnet-1
#           labels:
#             provider: aws
#             subnet-type: public
#             subnet-name: public-subnet-1
#         spec:
#           forProvider:
#             region: us-east-1
#             cidrBlock: 10.0.1.0/24
#             vpcIdSelector:
#               matchControllerRef: true
#             availabilityZone: us-east-1a
#             mapPublicIpOnLaunch: true
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     - name: public-subnet-2
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: Subnet
#         metadata:
#           name: public-subnet-2
#           labels:
#             provider: aws
#             subnet-type: public
#             subnet-name: public-subnet-2
#         spec:
#           forProvider:
#             region: us-east-1
#             vpcIdSelector:
#               matchControllerRef: true
#             cidrBlock: 10.0.2.0/24
#             availabilityZone: us-east-1b
#             mapPublicIpOnLaunch: true
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     - name: public-subnet-3
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: Subnet
#         metadata:
#           name: public-subnet-3
#           labels:
#             provider: aws
#             subnet-type: public
#             subnet-name: public-subnet-3
#         spec:
#           forProvider:
#             region: us-east-1
#             vpcIdSelector:
#               matchControllerRef: true
#             cidrBlock: 10.0.3.0/24
#             availabilityZone: us-east-1c
#             mapPublicIpOnLaunch: true
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     # Private Subnets
#     - name: private-subnet-1
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: Subnet
#         metadata:
#           name: private-subnet-1
#           labels:
#             provider: aws
#             subnet-type: private
#             subnet-name: private-subnet-1
#         spec:
#           forProvider:
#             region: us-east-1
#             vpcIdSelector:
#               matchControllerRef: true
#             cidrBlock: 10.0.10.0/24
#             availabilityZone: us-east-1a
#             mapPublicIpOnLaunch: false
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     - name: private-subnet-2
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: Subnet
#         metadata:
#           name: private-subnet-2
#           labels:
#             provider: aws
#             subnet-type: private
#             subnet-name: private-subnet-2
#         spec:
#           forProvider:
#             region: us-east-1
#             vpcIdSelector:
#               matchControllerRef: true
#             cidrBlock: 10.0.11.0/24
#             availabilityZone: us-east-1b
#             mapPublicIpOnLaunch: false
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     - name: private-subnet-3
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: Subnet
#         metadata:
#           name: private-subnet-3
#           labels:
#             provider: aws
#             subnet-type: private
#             subnet-name: private-subnet-3
#         spec:
#           forProvider:
#             region: us-east-1
#             vpcIdSelector:
#               matchControllerRef: true
#             cidrBlock: 10.0.12.0/24
#             availabilityZone: us-east-1c
#             mapPublicIpOnLaunch: false
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     # Public Route Table
#     - name: public-route-table
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: RouteTable
#         metadata:
#           name: public-rt
#           labels:
#             provider: aws
#             table-type: public
#         spec:
#           forProvider:
#             region: us-east-1
#             vpcIdSelector:
#               matchControllerRef: true
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     # Public Route Table Associations
#     - name: public-subnet-1-association-a
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: RouteTableAssociation
#         metadata:
#           name: public-subnet-1-association
#           labels:
#             provider: aws
#         spec:
#           forProvider:
#             region: us-east-1
#             routeTableIdSelector:
#               # matchControllerRef: true
#               matchLabels:
#                 table-type: public
#             gatewayIdSelector:
#               matchLabels:
#                 gateway-type: internet
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     - name: public-subnet-1-association-b
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: RouteTableAssociation
#         metadata:
#           name: public-subnet-1-association
#           labels:
#             provider: aws
#         spec:
#           forProvider:
#             region: us-east-1
#             subnetIdSelector:
#               # matchControllerRef: true
#               matchLabels:
#                 subnet-type: public
#             routeTableIdSelector:
#               # matchControllerRef: true
#               matchLabels:
#                 table-type: public
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     # - name: public-subnet-2-association
#     #   base:
#     #     apiVersion: ec2.aws.upbound.io/v1beta1
#     #     kind: RouteTableAssociation
#     #     metadata:
#     #       name: public-subnet-2-association
#     #       labels:
#     #         provider: aws
#     #     spec:
#     #       forProvider:
#     #         region: us-east-1
#     #         subnetIdSelector:
#     #           matchControllerRef: true
#     #           matchLabels:
#     #             subnet-type: public
#     #         routeTableIdSelector:
#     #           matchControllerRef: true
#     #           matchLabels:
#     #             table-type: public
#     #   patches:
#     #     - type: FromCompositeFieldPath
#     #       fromFieldPath: spec.parameters.region
#     #       toFieldPath: spec.forProvider.region

#     # - name: public-subnet-3-association
#     #   base:
#     #     apiVersion: ec2.aws.upbound.io/v1beta1
#     #     kind: RouteTableAssociation
#     #     metadata:
#     #       name: public-subnet-3-association
#     #       labels:
#     #         provider: aws
#     #     spec:
#     #       forProvider:
#     #         region: us-east-1
#     #         subnetIdSelector:
#     #           matchControllerRef: true
#     #           matchLabels:
#     #             subnet-type: public
#     #         routeTableIdSelector:
#     #           matchControllerRef: true
#     #           matchLabels:
#     #             table-type: public
#     #   patches:
#     #     - type: FromCompositeFieldPath
#     #       fromFieldPath: spec.parameters.region
#     #       toFieldPath: spec.forProvider.region

#     # Private Route Table
#     - name: private-route-table
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: RouteTable
#         metadata:
#           name: private-rt
#           labels:
#             provider: aws
#             table-type: private
#         spec:
#           forProvider:
#             region: us-east-1
#             vpcIdSelector:
#               matchControllerRef: true
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     # Private Route Table Associations
#     - name: private-subnet-1-association-a
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: RouteTableAssociation
#         metadata:
#           name: private-subnet-1-association
#           labels:
#             provider: aws
#         spec:
#           forProvider:
#             region: us-east-1
#             routeTableIdSelector:
#               # matchControllerRef: true
#               matchLabels:
#                 table-type: private
#             gatewayIdSelector:
#               matchLabels:
#                 gateway-type: nat
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region

#     - name: private-subnet-1-association-b
#       base:
#         apiVersion: ec2.aws.upbound.io/v1beta1
#         kind: RouteTableAssociation
#         metadata:
#           name: private-subnet-1-association
#           labels:
#             provider: aws
#         spec:
#           forProvider:
#             region: us-east-1
#             subnetIdSelector:
#               # matchControllerRef: true
#               matchLabels:
#                 subnet-type: private
#             routeTableIdSelector:
#               # matchControllerRef: true
#               matchLabels:
#                 table-type: private
#       patches:
#         - type: FromCompositeFieldPath
#           fromFieldPath: spec.parameters.region
#           toFieldPath: spec.forProvider.region
#     # - name: private-subnet-2-association
#     #   base:
#     #     apiVersion: ec2.aws.upbound.io/v1beta1
#     #     kind: RouteTableAssociation
#     #     metadata:
#     #       name: private-subnet-2-association
#     #       labels:
#     #         provider: aws
#     #     spec:
#     #       forProvider:
#     #         region: us-east-1
#     #         subnetIdSelector:
#     #           matchControllerRef: true
#     #           matchLabels:
#     #             subnet-type: private
#     #         routeTableIdSelector:
#     #           matchControllerRef: true
#     #           matchLabels:
#     #             table-type: private
#     #   patches:
#     #     - type: FromCompositeFieldPath
#     #       fromFieldPath: spec.parameters.region
#     #       toFieldPath: spec.forProvider.region

#     # - name: private-subnet-3-association
#     #   base:
#     #     apiVersion: ec2.aws.upbound.io/v1beta1
#     #     kind: RouteTableAssociation
#     #     metadata:
#     #       name: private-subnet-3-association
#     #       labels:
#     #         provider: aws
#     #     spec:
#     #       forProvider:
#     #         region: us-east-1
#     #         subnetIdSelector:
#     #           matchControllerRef: true
#     #           matchLabels:
#     #             subnet-type: private
#     #         routeTableIdSelector:
#     #           matchControllerRef: true
#     #           matchLabels:
#     #             table-type: private
#     #   patches:
#     #     - type: FromCompositeFieldPath
#     #       fromFieldPath: spec.parameters.region
#     #       toFieldPath: spec.forProvider.region




apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: vpc.aws.platform.example.org
  labels:
    provider: aws
spec:
  compositeTypeRef:
    apiVersion: aws.platform.example.org/v1alpha1
    kind: XVPC
  mode: Pipeline
  pipeline:
    - step: go-templating
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            # VPC
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: VPC
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: vpc
              labels:
                provider: aws
            spec:
              forProvider:
                region: {{ .observed.composite.resource.spec.parameters.region }}
                cidrBlock: {{ .observed.composite.resource.spec.parameters.cidrBlock }}
                enableDnsSupport: true
                enableDnsHostnames: true

            ---
            # Internet Gateway
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: InternetGateway
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: internet-gateway
              labels:
                provider: aws
                gateway-type: internet
            spec:
              forProvider:
                region: {{ .observed.composite.resource.spec.parameters.region }}
                vpcIdSelector:
                  matchControllerRef: true

            ---
            # NAT Gateway
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: NATGateway
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: nat-gateway
              labels:
                provider: aws
                gateway-type: nat
            spec:
              forProvider:
                region: {{ .observed.composite.resource.spec.parameters.region }}
                subnetIdSelector:
                  matchLabels:
                    subnet-type: private
                allocationIdSelector:
                  matchLabels:
                    eip-type: nat

            ---
            # NAT EIP
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: EIP
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: nat-eip
              labels:
                provider: aws
                eip-type: nat
            spec:
              forProvider:
                region: {{ .observed.composite.resource.spec.parameters.region }}
                domain: vpc
              managementPolicies:
                - "*"

            ---
            # Public Subnets
            {{- $azs := list "us-east-1a" "us-east-1b" "us-east-1c" }}
            {{- range $i, $az := $azs }}
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: Subnet
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: public-subnet-{{ add $i 1 }}
              labels:
                provider: aws
                subnet-type: public
                subnet-name: public-subnet-{{ add $i 1 }}
            spec:
              forProvider:
                region: {{ $.observed.composite.resource.spec.parameters.region }}
                cidrBlock: 10.0.{{ add $i 1 }}.0/24
                availabilityZone: {{ $az }}
                mapPublicIpOnLaunch: true
                vpcIdSelector:
                  matchControllerRef: true
            ---
            {{- end }}

            ---
            # Private Subnets
            {{- $privateAzs := list "us-east-1a" "us-east-1b" "us-east-1c" }}
            {{- range $i, $az := $privateAzs }}
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: Subnet
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: private-subnet-{{ add $i 1 }}
              labels:
                provider: aws
                subnet-type: private
                subnet-name: private-subnet-{{ add $i 1 }}
            spec:
              forProvider:
                region: {{ $.observed.composite.resource.spec.parameters.region }}
                cidrBlock: 10.0.{{ add $i 10 }}.0/24
                availabilityZone: {{ $az }}
                mapPublicIpOnLaunch: false
                vpcIdSelector:
                  matchControllerRef: true
            ---
            {{- end }}

            ---
            # Public Route Table
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: RouteTable
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: public-route-table
              labels:
                provider: aws
                table-type: public
            spec:
              forProvider:
                region: {{ .observed.composite.resource.spec.parameters.region }}
                vpcIdSelector:
                  matchControllerRef: true

            ---
            # Public Route Table Associations
            {{- range $i, $az := $azs }}
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: RouteTableAssociation
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: public-rt-assoc-{{ add $i 1 }}
              labels:
                provider: aws
            spec:
              forProvider:
                region: {{ $.observed.composite.resource.spec.parameters.region }}
                subnetIdSelector:
                  matchLabels:
                    subnet-name: public-subnet-{{ add $i 1 }}
                routeTableIdSelector:
                  matchLabels:
                    table-type: public
            ---
            {{- end }}

            ---
            # Private Route Table
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: RouteTable
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: private-route-table
              labels:
                provider: aws
                table-type: private
            spec:
              forProvider:
                region: {{ .observed.composite.resource.spec.parameters.region }}
                vpcIdSelector:
                  matchControllerRef: true

            ---
            # Private Route Table Associations
            {{- range $i, $az := $privateAzs }}
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: RouteTableAssociation
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: private-rt-assoc-{{ add $i 1 }}
              labels:
                provider: aws
            spec:
              forProvider:
                region: {{ $.observed.composite.resource.spec.parameters.region }}
                subnetIdSelector:
                  matchLabels:
                    subnet-name: private-subnet-{{ add $i 1 }}
                routeTableIdSelector:
                  matchLabels:
                    table-type: private
            ---
            {{- end }}

    - step: auto-ready
      functionRef:
        name: function-auto-ready