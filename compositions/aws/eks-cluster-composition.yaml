apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: eks.aws.platform.example.org
  labels:
    provider: aws
spec:
  compositeTypeRef:
    apiVersion: aws.platform.example.org/v1alpha1
    kind: XEKSCluster
  resources:
    # VPC for the EKS cluster
    - name: vpc
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: VPC
        metadata:
          namespace: crossplane-system
          name: eks-vpc
          annotations:
            meta.upbound.io/example-id: ec2/v1beta1/vpc
        spec:
          providerConfigRef:
            name: default 
          forProvider:
            cidrBlock: 10.0.0.0/16
            enableDnsSupport: true
            enableDnsHostnames: true
            tags:
              Name: eks-vpc
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region

    # Public Subnet 1
    - name: publicsubnet1
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          name: eks-public-1
          namespace: crossplane-system
          annotations:
            meta.upbound.io/example-id: ec2/v1beta1/subnet
        spec:
          providerConfigRef:
            name: default
          forProvider:
            cidrBlock: 10.0.1.0/24
            mapPublicIpOnLaunch: true
            tags:
              Name: eks-public-1
              "kubernetes.io/role/elb": "1"
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region

    # Public Subnet 2
    - name: publicsubnet2
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          name: eks-public-2
          namespace: crossplane-system
          annotations:
            meta.upbound.io/example-id: ec2/v1beta1/subnet
        spec:
          providerConfigRef:
            name: default
          forProvider:
            cidrBlock: 10.0.2.0/24
            mapPublicIpOnLaunch: true
            availabilityZoneSuffix: "b"
            tags:
              Name: eks-public-2
              "kubernetes.io/role/elb": "1"
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region

    # IAM Role for EKS Cluster
    - name: eksclusterrole
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        metadata:
          namespace: crossplane-system
          annotations:
            meta.upbound.io/example-id: iam/v1beta1/role
          labels:
            cluster-name: eks-cluster
          name: eks-cluster-role 
        spec:
          providerConfigRef:
            name: default
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "eks.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
      patches:
        # Add this patch to dynamically set the label from the composite resource name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.labels.cluster-name

    # Attach AmazonEKSClusterPolicy to the role
    - name: eksclustersrolepolicy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        metadata:
          name: eks-cluster-role-policy
          namespace: crossplane-system
          annotations:
            meta.upbound.io/example-id: iam/v1beta1/rolepolicyattachment
        spec:
          providerConfigRef:
            name: default
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
            roleSelector:
              matchControllerRef: true

    # EKS Cluster
    - name: ekscluster
      base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: Cluster
        metadata:
          name: eks-cluster
          namespace: crossplane-system
          annotations:
            meta.upbound.io/example-id: eks/v1beta1/cluster
          labels:
            cluster-name: eks-cluster
        spec:
          providerConfigRef:
            name: default
          forProvider:
            roleArnSelector:
              matchLabels:
                cluster-name: ""
            # roleArnSelector:
            #   matchControllerRef: true
            # roleArn: ""
            vpcConfig:
              - endpointPrivateAccess: true
                endpointPublicAccess: true
                subnetIdSelector:
                  matchControllerRef: true
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.clusterVersion
          toFieldPath: spec.forProvider.version
        # Use roleArnSelector instead of direct ARN construction
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: spec.forProvider.roleArnSelector.matchLabels.cluster-name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.labels.cluster-name

    # IAM Role for Node Group
    - name: eksnodegrouprole
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        metadata:
          name: eks-node-group-role
          namespace: crossplane-system
          annotations:
            meta.upbound.io/example-id: iam/v1beta1/role
        spec:
          providerConfigRef:
            name: default
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "ec2.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
      patches:
        # Add this patch to set the label from composite name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.labels.cluster-name

    # EKS Node Group
    - name: eksnodegroup
      base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: NodeGroup
        metadata:
          name: eks-node-group
          namespace: crossplane-system
          annotations:
            meta.upbound.io/example-id: eks/v1beta1/nodegroup
        spec:
          providerConfigRef:
            name: default
          forProvider:
            clusterNameSelector:
              matchLabels:
                cluster-name: ""
            nodeRoleArnSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
            scalingConfig:
              - desiredSize: 2
                maxSize: 4
                minSize: 1
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.nodeCount
          toFieldPath: spec.forProvider.scalingConfig[0].desiredSize
        - fromFieldPath: spec.nodeSize
          toFieldPath: spec.forProvider.instanceTypes[0]
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.clusterNameSelector.matchLabels.cluster-name