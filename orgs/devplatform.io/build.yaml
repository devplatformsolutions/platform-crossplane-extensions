apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  name: awsec2dynamodbinstances.devplatform.io
spec:
  claimNames:
    kind: EC2DynamoDBInstance
    plural: ec2dynamodbinstances
  group: devplatform.io
  names:
    kind: AwsEC2DynamoDBInstance
    plural: awsec2dynamodbinstances
  versions:
  - name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              instanceType:
                description: The EC2 instance type to provision.
                type: string
            type: object
        type: object
    served: true
---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xeksclusters.aws.devplatform.io
spec:
  claimNames:
    kind: EKSCluster
    plural: eksclusters
  group: aws.devplatform.io
  names:
    kind: XEKSCluster
    plural: xeksclusters
  versions:
  - name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              clusterVersion:
                default: "1.28"
                description: EKS cluster version (e.g. 1.28)
                type: string
              nodeCount:
                default: 2
                description: Number of worker nodes
                type: integer
              nodeSize:
                default: t3.medium
                description: EC2 instance type for worker nodes
                type: string
              region:
                default: us-west-2
                description: AWS region
                type: string
            required:
            - region
            type: object
        type: object
    served: true
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "5"
  name: awsec2dynamodbinstances.devplatform.io
spec:
  compositeTypeRef:
    apiVersion: devplatform.io/v1alpha1
    kind: AwsEC2DynamoDBInstance
  resources:
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta2
      kind: Instance
      metadata:
        annotations:
          meta.upbound.io/example-id: ec2/v1beta2/instance
        labels:
          testing.upbound.io/example-name: sample-instance
        name: sample-instance
      spec:
        forProvider:
          ami: ami-00a929b66ed6e0de6
          creditSpecification:
            cpuCredits: unlimited
          instanceType: t2.micro
          region: us-east-1
        providerConfigRef:
          name: default
    name: ec2instance
    patches:
    - fromFieldPath: spec.instanceType
      toFieldPath: spec.forProvider.instanceType
      type: FromCompositeFieldPath
  - base:
      apiVersion: dynamodb.aws.upbound.io/v1beta2
      kind: Table
      metadata:
        annotations:
          meta.upbound.io/example-id: dynamodb/v1beta2/table
        name: example
        namespace: crossplane-system
      spec:
        forProvider:
          attribute:
          - name: UserId
            type: S
          - name: GameTitle
            type: S
          - name: TopScore
            type: S
          billingMode: PROVISIONED
          globalSecondaryIndex:
          - hashKey: GameTitle
            name: GameTitleIndex
            nonKeyAttributes:
            - UserId
            projectionType: INCLUDE
            rangeKey: TopScore
            readCapacity: 10
            writeCapacity: 10
          hashKey: UserId
          rangeKey: GameTitle
          readCapacity: 20
          region: us-east-1
          tags:
            Environment: production
            Name: dynamodb-table-1
          writeCapacity: 20
        providerConfigRef:
          name: default
    name: dynamodbtable
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    provider: aws
  name: eks.aws.devplatform.io
spec:
  compositeTypeRef:
    apiVersion: aws.devplatform.io/v1alpha1
    kind: XEKSCluster
  resources:
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPC
      spec:
        forProvider:
          cidrBlock: 10.0.0.0/16
          enableDnsHostnames: true
          enableDnsSupport: true
          tags:
            Name: eks-vpc
    name: vpc
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      spec:
        forProvider:
          cidrBlock: 10.0.1.0/24
          mapPublicIpOnLaunch: true
          tags:
            Name: eks-public-1
            kubernetes.io/role/elb: "1"
          vpcIdSelector:
            matchControllerRef: true
    name: publicsubnet1
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      spec:
        forProvider:
          availabilityZoneSuffix: b
          cidrBlock: 10.0.2.0/24
          mapPublicIpOnLaunch: true
          tags:
            Name: eks-public-2
            kubernetes.io/role/elb: "1"
          vpcIdSelector:
            matchControllerRef: true
    name: publicsubnet2
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
  - base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        name: eks-cluster-role
      spec:
        forProvider:
          assumeRolePolicy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "eks.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            }
    name: eksclusterrole
  - base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          roleSelector:
            matchControllerRef: true
    name: eksclustersrolepolicy
  - base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: Cluster
      spec:
        forProvider:
          vpcConfig:
          - endpointPrivateAccess: true
            endpointPublicAccess: true
            subnetIdSelector:
              matchControllerRef: true
    name: ekscluster
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.clusterVersion
      toFieldPath: spec.forProvider.version
    - fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.roleArnSelector.matchLabels.cluster-name
      type: FromCompositeFieldPath
  - base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      spec:
        forProvider:
          assumeRolePolicy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ec2.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            }
    name: eksnodegrouprole
    patches:
    - fromFieldPath: metadata.name
      toFieldPath: metadata.labels.cluster-name
  - base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: NodeGroup
      spec:
        forProvider:
          clusterNameSelector:
            matchControllerRef: true
          nodeRoleArnSelector:
            matchControllerRef: true
          scalingConfig:
          - desiredSize: 2
            maxSize: 4
            minSize: 1
          subnetIdSelector:
            matchControllerRef: true
    name: eksnodegroup
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.nodeCount
      toFieldPath: spec.forProvider.scalingConfig[0].desiredSize
    - fromFieldPath: spec.nodeSize
      toFieldPath: spec.forProvider.instanceTypes[0]
---
apiVersion: aws.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  name: default
spec:
  credentials:
    secretRef:
      key: creds
      name: aws-secret
      namespace: crossplane-system
    source: Secret
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: upbound-provider-aws-dynamodb
spec:
  package: xpkg.crossplane.io/crossplane-contrib/provider-aws-dynamodb:v1.21.1
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: upbound-provider-aws-ec2
spec:
  package: xpkg.crossplane.io/crossplane-contrib/provider-aws-ec2:v1.21.1
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: upbound-provider-aws-eks
spec:
  package: xpkg.upbound.io/upbound/provider-aws-eks:v1.21.1
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: upbound-provider-aws-iam
spec:
  package: xpkg.upbound.io/upbound/provider-aws-iam:v1.21.1
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: upbound-provider-aws-kms
spec:
  package: xpkg.upbound.io/upbound/provider-aws-kms:v1.21.1
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: upbound-provider-aws-s3
spec:
  package: xpkg.crossplane.io/crossplane-contrib/provider-aws-s3:v1.21.1
